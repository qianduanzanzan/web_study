/**
 * 从宏观上来说，编译本质上是一种转换技术，从一门编程语言转换成另一门编程语言，
 * 或者从高级语言转换成低级语言，或者从高级语言到高级语言，所谓的高级语言和低级语言主要是指下面的区分：
 *
 * 1.高级语言：有很多用于描述逻辑的语言特性，比如分支、循环、函数、面向对象等，接近人的思维，
 * 可以让开发者快速的通过它来表达各种逻辑。比如 c++、javascript。
 *
 * 2.低级语言：与硬件和执行细节有关，会操作寄存器、内存，具体做内存与寄存器之间的复制，需要开
 * 发者理解熟悉计算机的工作原理，熟悉具体的执行细节。比如汇编语言、机器语言。
 *
 */

/**
 * Babel 的编译流程
 *
 * 1: parse（解析） @babel/parser
 * parse 这个阶段将原始代码字符串转为AST 树  将 ES6/ES7 代码解析成 AST
 *
 * 2.transform（转化） @babel/traverse
 * transform 阶段主要是对上一步 parse 生成的 AST 进行深度优先遍历，从而对于匹配节点进行增删改查来修改树形结构。
 * 对 AST 进行遍历转译，得到新的 AST
 *
 * 3.generate（生成） @babel/generator
 * AST 转换完之后就要输出目标代码字符串，这个阶段是个逆向操作，用新的 AST 来生成我们所需要的代码，
 * 在生成阶段本质上也是遍历抽象语法树，根据抽象语法树上每个节点的类型和属性递归调用从而生成对应的字符串代码
 * 新 AST转换成 ES5
 */
